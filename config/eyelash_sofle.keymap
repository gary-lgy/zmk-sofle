#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

#define LAYER_WIN    0
#define LAYER_MAC    1
#define LAYER_GAME   2
#define LAYER_GAME_2 3
#define LAYER_FN     4
#define LAYER_CTRL   5

/ {

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        win {
            bindings = <
&kp GRAVE  &kp N1   &kp N2    &kp N3        &kp N4   &kp N5  &kp C_VOLUME_UP   &kp N6    &kp N7        &kp N8    &kp N9         &kp N0   &kp MINUS
&kp TAB    &kp Q    &kp W     &kp E         &kp R    &kp T   &kp C_VOLUME_DOWN &kp Y     &kp U         &kp I     &kp O          &kp P    &kp EQUAL
&kp CAPS   &kp A    &kp S     &kp D         &kp F    &kp G   &kp C_PLAY_PAUSE  &kp H     &kp J         &kp K     &kp L          &kp SEMI &kp APOS
&kp LSHFT  &kp Z    &kp X     &kp C         &kp V    &kp B   &kp C_PLAY_PAUSE  &kp N     &kp M         &kp COMMA &kp DOT        &kp FSLH &kp RSHIFT
&kp C_MUTE &kp LGUI &kp LCTRL &kp BACKSPACE &kp LALT &kp ESC &kp C_MUTE        &kp ENTER &mo LAYER_FN  &kp SPACE &mo LAYER_CTRL &kp LGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "win";
        };

        mac {
            bindings = <
&trans &trans    &trans   &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
&trans &trans    &trans   &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
&trans &trans    &trans   &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
&trans &trans    &trans   &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
&trans &kp LCTRL &kp LGUI &trans &trans &trans &trans &trans &trans &trans &trans &kp LCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "mac";
        };

        game {
            bindings = <
&trans &trans   &trans &trans    &trans   &trans &trans &trans &trans &trans        &trans &trans &trans
&trans &trans   &trans &trans    &trans   &trans &trans &trans &trans &trans        &trans &trans &trans
&trans &trans   &trans &trans    &trans   &trans &trans &trans &trans &trans        &trans &trans &trans
&trans &trans   &trans &trans    &trans   &trans &trans &trans &trans &trans        &trans &trans &trans
&trans &kp LALT &trans &kp SPACE &kp LSFT &trans &trans &trans &trans &kp BACKSPACE &trans &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "game";
        };

        game2 {
            bindings = <
&trans    &trans   &trans &trans    &trans   &trans &trans &trans &trans &trans        &trans &trans &trans
&mkp LCLK &trans   &trans &trans    &trans   &trans &trans &trans &trans &trans        &trans &trans &trans
&mkp RCLK &trans   &trans &trans    &trans   &trans &trans &trans &trans &trans        &trans &trans &trans
&trans    &trans   &trans &trans    &trans   &trans &trans &trans &trans &trans        &trans &trans &trans
&trans    &trans   &trans &trans    &trans   &trans &trans &trans &trans &trans        &trans &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "game2";
        };

        fn {
            bindings = <
&kp GRAVE   &kp F1 &kp F2         &kp F3   &kp F4   &kp F5 &trans &kp F6  &kp F7      &kp F8     &kp F9        &kp F10 &kp F11
&none       &none  &none          &kp LBRC &kp RBRC &none  &trans &none   &kp HOME    &kp UP     &kp END       &none   &kp F12
&none       &none  &none          &kp LPAR &kp RPAR &none  &trans &none   &kp LEFT    &kp DOWN   &kp RIGHT     &none   &none
&trans      &none  &kp BACKSLASH  &kp LBKT &kp RBKT &none  &trans &none   &kp PAGE_UP &kp INSERT &kp PAGE_DOWN &none   &trans
&kp C_MUTE  &none  &trans         &trans   &trans   &trans &trans &trans  &trans      &trans     &trans        &trans
            >;

            display-name = "fn";
            sensor-bindings = <&scroll_encoder>;
        };

        ctrl {
            bindings = <
&kp C_MUTE        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3     &bt BT_SEL 4    &mmv MOVE_UP    &none       &none      &none &none &none &none
&kp C_VOLUME_UP   &to LAYER_WIN &to LAYER_MAC &to LAYER_GAME &to LAYER_GAME_2 &bt BT_CLR      &mmv MOVE_DOWN  &none       &none      &none &none &none &none
&kp C_VOLUME_DOWN &out OUT_USB  &out OUT_BLE  &none          &none            &bt BT_CLR_ALL  &mmv MOVE_LEFT  &none       &none      &none &none &none &none
&none             &mkp LCLK     &mkp MCLK     &mkp RCLK      &rgb_ug RGB_TOG  &none           &mmv MOVE_RIGHT &none       &none      &none &none &none &none
&none             &none         &none         &none          &sys_reset       &bootloader     &mkp LCLK       &bootloader &sys_reset &none &none &none
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "ctrl";
        };
    };
};
